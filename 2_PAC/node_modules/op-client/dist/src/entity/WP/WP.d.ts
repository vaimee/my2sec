import { IEndpoint } from "../Abstract/IEndpoint";
import IWPBody from "./IWPBody";
import Abstract from "../Abstract/Abstract";
import Status from "../Status/Status";
import Type from "../Type/Type";
import Project from "../Project/Project";
import CO from "../CO/CO";
import Duration from "../Abstract/Duration";
import { User } from "../../index";
export interface IPartialWPBody extends Partial<Omit<IWPBody, '_links'>> {
    _links?: Partial<IWPBody['_links']>;
}
/**
 * Work package
 */
export default class WP extends Abstract {
    ['constructor']: typeof WP;
    static url: string;
    constructor(init?: number | IEndpoint | IPartialWPBody);
    subject: string;
    startDate: Date;
    dueDate: Date;
    scheduleManually: boolean;
    createdAt: Date;
    estimatedTime: Duration;
    spentTime: Duration;
    derivedEstimatedTime: Duration;
    project: Project;
    embeddedProject: Project;
    status: Status;
    embeddedStatus: Status;
    type: Type;
    embeddedType: Type;
    module: CO;
    assignee: User;
    author: User;
    parent: WP;
    body: IWPBody;
    get ancestor(): WP;
    get children(): WP[];
    toString(): string;
}
